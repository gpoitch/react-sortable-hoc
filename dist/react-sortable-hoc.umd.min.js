!(function(e, t) {
  'object' == typeof exports && 'undefined' != typeof module
    ? t(exports, require('react'), require('prop-types'), require('react-dom'))
    : 'function' == typeof define && define.amd
    ? define(['exports', 'react', 'prop-types', 'react-dom'], t)
    : t(((e = e || self).SortableHOC = {}), e.React, e.PropTypes, e.ReactDOM);
})(this, function(e, i, a, l) {
  'use strict';
  function t(e, t) {
    return e((t = {exports: {}}), t.exports), t.exports;
  }
  a = a && Object.prototype.hasOwnProperty.call(a, 'default') ? a.default : a;
  var s = t(function(e) {
    function t() {
      return (
        (e.exports = t =
          Object.assign ||
          function(e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var o in n)
                Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
            }
            return e;
          }),
        t.apply(this, arguments)
      );
    }
    e.exports = t;
  });
  var n = function(e) {
    if (Array.isArray(e)) return e;
  };
  var o = function(e, t) {
    if ('undefined' != typeof Symbol && Symbol.iterator in Object(e)) {
      var n = [],
        o = !0,
        r = !1,
        i = void 0;
      try {
        for (
          var a, l = e[Symbol.iterator]();
          !(o = (a = l.next()).done) && (n.push(a.value), !t || n.length !== t);
          o = !0
        );
      } catch (e) {
        (r = !0), (i = e);
      } finally {
        try {
          o || null == l.return || l.return();
        } finally {
          if (r) throw i;
        }
      }
      return n;
    }
  };
  var r = function(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var n = 0, o = new Array(t); n < t; n++) o[n] = e[n];
    return o;
  };
  var c = function(e, t) {
    if (e) {
      if ('string' == typeof e) return r(e, t);
      var n = Object.prototype.toString.call(e).slice(8, -1);
      return (
        'Object' === n && e.constructor && (n = e.constructor.name),
        'Map' === n || 'Set' === n
          ? Array.from(e)
          : 'Arguments' === n ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? r(e, t)
          : void 0
      );
    }
  };
  var u = function() {
    throw new TypeError(
      'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  };
  var b = function(e, t) {
    return n(e) || o(e, t) || c(e, t) || u();
  };
  var f = function(e, t) {
    if (!(e instanceof t))
      throw new TypeError('Cannot call a class as a function');
  };
  function d(e, t) {
    for (var n = 0; n < t.length; n++) {
      var o = t[n];
      (o.enumerable = o.enumerable || !1),
        (o.configurable = !0),
        'value' in o && (o.writable = !0),
        Object.defineProperty(e, o.key, o);
    }
  }
  var h = function(e, t, n) {
    return t && d(e.prototype, t), n && d(e, n), e;
  };
  var p = function(e) {
      if (void 0 === e)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called",
        );
      return e;
    },
    y = t(function(n) {
      function o(e, t) {
        return (
          (n.exports = o =
            Object.setPrototypeOf ||
            function(e, t) {
              return (e.__proto__ = t), e;
            }),
          o(e, t)
        );
      }
      n.exports = o;
    });
  var g = function(e, t) {
      if ('function' != typeof t && null !== t)
        throw new TypeError(
          'Super expression must either be null or a function',
        );
      (e.prototype = Object.create(t && t.prototype, {
        constructor: {value: e, writable: !0, configurable: !0},
      })),
        t && y(e, t);
    },
    v = t(function(t) {
      function n(e) {
        return (
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? (t.exports = n = function(e) {
                return typeof e;
              })
            : (t.exports = n = function(e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
          n(e)
        );
      }
      t.exports = n;
    });
  var m = function(e, t) {
      return !t || ('object' !== v(t) && 'function' != typeof t) ? p(e) : t;
    },
    x = t(function(t) {
      function n(e) {
        return (
          (t.exports = n = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          n(e)
        );
      }
      t.exports = n;
    });
  var w = function(e, t, n) {
      return (
        t in e
          ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (e[t] = n),
        e
      );
    },
    S = function(e, t, n, o, r, i, a, l) {
      if (!e) {
        var s;
        if (void 0 === t)
          s = new Error(
            'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.',
          );
        else {
          var c = [n, o, r, i, a, l],
            u = 0;
          (s = new Error(
            t.replace(/%s/g, function() {
              return c[u++];
            }),
          )).name = 'Invariant Violation';
        }
        throw ((s.framesToPop = 1), s);
      }
    },
    O = (function() {
      function e() {
        f(this, e), w(this, 'refs', {});
      }
      return (
        h(e, [
          {
            key: 'add',
            value: function(e, t) {
              this.refs[e] || (this.refs[e] = []), this.refs[e].push(t);
            },
          },
          {
            key: 'remove',
            value: function(e, t) {
              var n = this.getIndex(e, t);
              -1 !== n && this.refs[e].splice(n, 1);
            },
          },
          {
            key: 'isActive',
            value: function() {
              return this.active;
            },
          },
          {
            key: 'getActive',
            value: function() {
              var t = this;
              return this.refs[this.active.collection].find(function(e) {
                return e.node.sortableInfo.index == t.active.index;
              });
            },
          },
          {
            key: 'getIndex',
            value: function(e, t) {
              return this.refs[e].indexOf(t);
            },
          },
          {
            key: 'getOrderedRefs',
            value: function() {
              var e =
                0 < arguments.length && void 0 !== arguments[0]
                  ? arguments[0]
                  : this.active.collection;
              return this.refs[e].sort(k);
            },
          },
        ]),
        e
      );
    })();
  function k(e, t) {
    return e.node.sortableInfo.index - t.node.sortableInfo.index;
  }
  var I = function(e) {
    if (Array.isArray(e)) return r(e);
  };
  var C = function(e) {
    if ('undefined' != typeof Symbol && Symbol.iterator in Object(e))
      return Array.from(e);
  };
  var T = function() {
    throw new TypeError(
      'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  };
  var D = function(e) {
    return I(e) || C(e) || c(e) || T();
  };
  function E(n, o) {
    return Object.keys(n).reduce(function(e, t) {
      return -1 === o.indexOf(t) && (e[t] = n[t]), e;
    }, {});
  }
  var j = {
      end: ['touchend', 'touchcancel', 'mouseup'],
      move: ['touchmove', 'mousemove'],
      start: ['touchstart', 'mousedown'],
    },
    R = (function() {
      if ('undefined' == typeof window || 'undefined' == typeof document)
        return '';
      var e = window.getComputedStyle(document.documentElement, '') || [
          '-moz-hidden-iframe',
        ],
        t = (Array.prototype.slice
          .call(e)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === e.OLink && ['', 'o']))[1];
      switch (t) {
        case 'ms':
          return 'ms';
        default:
          return t && t.length ? t[0].toUpperCase() + t.substr(1) : '';
      }
    })();
  function A(t, n) {
    Object.keys(n).forEach(function(e) {
      t.style[e] = n[e];
    });
  }
  function N(e, t) {
    e.style[''.concat(R, 'Transform')] =
      null == t ? '' : 'translate3d('.concat(t.x, 'px,').concat(t.y, 'px,0)');
  }
  function M(e, t) {
    e.style[''.concat(R, 'TransitionDuration')] =
      null == t ? '' : ''.concat(t, 'ms');
  }
  function L(e, t) {
    for (; e; ) {
      if (t(e)) return e;
      e = e.parentNode;
    }
    return null;
  }
  function P(e, t, n) {
    return Math.max(e, Math.min(n, t));
  }
  function W(e) {
    return 'px' === e.substr(-2) ? parseFloat(e) : 0;
  }
  function H(e, t) {
    var n = t.displayName || t.name;
    return n ? ''.concat(e, '(').concat(n, ')') : e;
  }
  function K(e, t) {
    var n = e.getBoundingClientRect();
    return {top: n.top + t.top, left: n.left + t.left};
  }
  function G(e) {
    return e.touches && e.touches.length
      ? {x: e.touches[0].pageX, y: e.touches[0].pageY}
      : e.changedTouches && e.changedTouches.length
      ? {x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY}
      : {x: e.pageX, y: e.pageY};
  }
  function _(e, t) {
    var n =
      2 < arguments.length && void 0 !== arguments[2]
        ? arguments[2]
        : {left: 0, top: 0};
    if (e) {
      var o = {left: n.left + e.offsetLeft, top: n.top + e.offsetTop};
      return e.parentNode === t ? o : _(e.parentNode, t, o);
    }
  }
  function B(e) {
    var t = e.lockOffset,
      n = e.width,
      o = e.height,
      r = t,
      i = t,
      a = 'px';
    if ('string' == typeof t) {
      var l = /^[+-]?\d*(?:\.\d*)?(px|%)$/.exec(t);
      S(
        null !== l,
        'lockOffset value should be a number or a string of a number followed by "px" or "%". Given %s',
        t,
      ),
        (r = parseFloat(t)),
        (i = parseFloat(t)),
        (a = l[1]);
    }
    return (
      S(
        isFinite(r) && isFinite(i),
        'lockOffset value should be a finite. Given %s',
        t,
      ),
      '%' === a && ((r = (r * n) / 100), (i = (i * o) / 100)),
      {x: r, y: i}
    );
  }
  function U(e) {
    return e instanceof HTMLElement
      ? ((t = e),
        (n = window.getComputedStyle(t)),
        (o = /(auto|scroll)/),
        ['overflow', 'overflowX', 'overflowY'].find(function(e) {
          return o.test(n[e]);
        })
          ? e
          : U(e.parentNode))
      : null;
    var t, n, o;
  }
  var X = 27,
    Y = 32,
    q = 37,
    F = 38,
    V = 39,
    z = 40,
    $ = {
      Anchor: 'A',
      Button: 'BUTTON',
      Canvas: 'CANVAS',
      Input: 'INPUT',
      Option: 'OPTION',
      Textarea: 'TEXTAREA',
      Select: 'SELECT',
    };
  function J(o) {
    var r = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(o);
      if (r) {
        var n = x(this).constructor;
        e = Reflect.construct(t, arguments, n);
      } else e = t.apply(this, arguments);
      return m(this, e);
    };
  }
  function Q(o) {
    var e,
      t,
      r =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (t = e = (function(e) {
        g(n, e);
        var t = J(n);
        function n() {
          return f(this, n), t.apply(this, arguments);
        }
        return (
          h(n, [
            {
              key: 'componentDidMount',
              value: function() {
                l.findDOMNode(this).sortableHandle = !0;
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  S(
                    r.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = r.withRef ? 'wrappedInstance' : null;
                return i.createElement(o, s({ref: e}, this.props));
              },
            },
          ]),
          n
        );
      })(i.Component)),
      w(e, 'displayName', H('sortableHandle', o)),
      t
    );
  }
  function Z(e) {
    return null != e.sortableHandle;
  }
  var ee = (function() {
    function n(e, t) {
      f(this, n), (this.container = e), (this.onScrollCallback = t);
    }
    return (
      h(n, [
        {
          key: 'clear',
          value: function() {
            null != this.interval &&
              (clearInterval(this.interval), (this.interval = null));
          },
        },
        {
          key: 'update',
          value: function(e) {
            var t = this,
              n = e.translate,
              o = e.minTranslate,
              r = e.maxTranslate,
              i = e.width,
              a = e.height,
              l = {x: 0, y: 0},
              s = {x: 1, y: 1},
              c = 10,
              u = 10,
              f = this.container,
              d = f.scrollTop,
              h = f.scrollLeft,
              p = f.scrollHeight,
              y = f.scrollWidth,
              g = 0 === d,
              v = p - d - f.clientHeight == 0,
              m = 0 === h,
              x = y - h - f.clientWidth == 0;
            n.y >= r.y - a / 2 && !v
              ? ((l.y = 1), (s.y = u * Math.abs((r.y - a / 2 - n.y) / a)))
              : n.x >= r.x - i / 2 && !x
              ? ((l.x = 1), (s.x = c * Math.abs((r.x - i / 2 - n.x) / i)))
              : n.y <= o.y + a / 2 && !g
              ? ((l.y = -1), (s.y = u * Math.abs((n.y - a / 2 - o.y) / a)))
              : n.x <= o.x + i / 2 &&
                !m &&
                ((l.x = -1), (s.x = c * Math.abs((n.x - i / 2 - o.x) / i))),
              this.interval && (this.clear(), (this.isAutoScrolling = !1)),
              (0 === l.x && 0 === l.y) ||
                (this.interval = setInterval(function() {
                  t.isAutoScrolling = !0;
                  var e = {left: s.x * l.x, top: s.y * l.y};
                  (t.container.scrollTop += e.top),
                    (t.container.scrollLeft += e.left),
                    t.onScrollCallback(e);
                }, 5));
          },
        },
      ]),
      n
    );
  })();
  var te = {
      axis: a.oneOf(['x', 'y', 'xy']),
      contentWindow: a.any,
      disableAutoscroll: a.bool,
      distance: a.number,
      getContainer: a.func,
      getHelperDimensions: a.func,
      helperClass: a.string,
      helperContainer: a.oneOfType([
        a.func,
        'undefined' == typeof HTMLElement ? a.any : a.instanceOf(HTMLElement),
      ]),
      hideSortableGhost: a.bool,
      keyboardSortingTransitionDuration: a.number,
      lockAxis: a.string,
      lockOffset: a.oneOfType([
        a.number,
        a.string,
        a.arrayOf(a.oneOfType([a.number, a.string])),
      ]),
      lockToContainerEdges: a.bool,
      onSortEnd: a.func,
      onSortMove: a.func,
      onSortOver: a.func,
      onSortStart: a.func,
      pressDelay: a.number,
      pressThreshold: a.number,
      keyCodes: a.shape({
        lift: a.arrayOf(a.number),
        drop: a.arrayOf(a.number),
        cancel: a.arrayOf(a.number),
        up: a.arrayOf(a.number),
        down: a.arrayOf(a.number),
      }),
      shouldCancelStart: a.func,
      transitionDuration: a.number,
      updateBeforeSortStart: a.func,
      useDragHandle: a.bool,
      useWindowAsScrollContainer: a.bool,
    },
    ne = {lift: [Y], drop: [Y], cancel: [X], up: [F, q], down: [z, V]},
    oe = {
      axis: 'y',
      disableAutoscroll: !1,
      distance: 0,
      getHelperDimensions: function(e) {
        var t = e.node;
        return {height: t.offsetHeight, width: t.offsetWidth};
      },
      hideSortableGhost: !0,
      lockOffset: '50%',
      lockToContainerEdges: !1,
      pressDelay: 0,
      pressThreshold: 5,
      keyCodes: ne,
      shouldCancelStart: function(e) {
        return (
          -1 !==
            [$.Input, $.Textarea, $.Select, $.Option, $.Button].indexOf(
              e.target.tagName,
            ) ||
          !!L(e.target, function(e) {
            return 'true' === e.contentEditable;
          })
        );
      },
      transitionDuration: 300,
      useWindowAsScrollContainer: !1,
    },
    re = Object.keys(te);
  function ie(t, e) {
    var n = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(t);
      e &&
        (o = o.filter(function(e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })),
        n.push.apply(n, o);
    }
    return n;
  }
  function ae(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = null != arguments[e] ? arguments[e] : {};
      e % 2
        ? ie(Object(n), !0).forEach(function(e) {
            w(t, e, n[e]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : ie(Object(n)).forEach(function(e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));
          });
    }
    return t;
  }
  function le(o) {
    var r = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(o);
      if (r) {
        var n = x(this).constructor;
        e = Reflect.construct(t, arguments, n);
      } else e = t.apply(this, arguments);
      return m(this, e);
    };
  }
  var se = 'forward',
    ce = 'backward';
  function ue(t) {
    var e,
      n,
      r =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (n = e = (function(e) {
        g(o, e);
        var n = le(o);
        function o(e) {
          var R, t;
          return (
            f(this, o),
            (R = n.call(this, e)),
            w(p(R), 'state', {}),
            w(p(R), 'handleStart', function(e) {
              var t = R.props,
                n = t.distance,
                o = t.shouldCancelStart;
              if (2 !== e.button && !o(e)) {
                (R.touched = !0), (R.position = G(e));
                var r,
                  i = L(e.target, function(e) {
                    return null != e.sortableInfo;
                  });
                if (
                  i &&
                  i.sortableInfo &&
                  R.nodeIsChild(i) &&
                  !R.state.sorting
                ) {
                  var a = R.props.useDragHandle,
                    l = i.sortableInfo,
                    s = l.index,
                    c = l.collection;
                  if (l.disabled) return;
                  if (a && !L(e.target, Z)) return;
                  (R.manager.active = {collection: c, index: s}),
                    ((r = e).touches && r.touches.length) ||
                      (r.changedTouches && r.changedTouches.length) ||
                      e.target.tagName !== $.Anchor ||
                      e.preventDefault(),
                    n ||
                      (0 === R.props.pressDelay
                        ? R.handlePress(e)
                        : (R.pressTimer = setTimeout(function() {
                            return R.handlePress(e);
                          }, R.props.pressDelay)));
                }
              }
            }),
            w(p(R), 'nodeIsChild', function(e) {
              return e.sortableInfo.manager === R.manager;
            }),
            w(p(R), 'handleMove', function(e) {
              var t = R.props,
                n = t.distance,
                o = t.pressThreshold;
              if (
                !R.state.sorting &&
                R.touched &&
                !R._awaitingUpdateBeforeSortStart
              ) {
                var r = G(e),
                  i = {x: R.position.x - r.x, y: R.position.y - r.y},
                  a = Math.abs(i.x) + Math.abs(i.y);
                (R.delta = i),
                  n || (o && !(o <= a))
                    ? n && n <= a && R.manager.isActive() && R.handlePress(e)
                    : (clearTimeout(R.cancelTimer),
                      (R.cancelTimer = setTimeout(R.cancel, 0)));
              }
            }),
            w(p(R), 'handleEnd', function() {
              (R.touched = !1), R.cancel();
            }),
            w(p(R), 'cancel', function() {
              var e = R.props.distance;
              R.state.sorting ||
                (e || clearTimeout(R.pressTimer), (R.manager.active = null));
            }),
            w(p(R), 'handlePress', function(E) {
              try {
                var r = R.manager.getActive(),
                  e = L(E.target, function(e) {
                    return null != e.sortableInfo;
                  });
                e.sortableInfo.locked &&
                  ((e.sortableInfo.locked = !1),
                  (e.sortableInfo.wasLocked = !0));
                var t = (function() {
                  if (r) {
                    var e = function() {
                        var e,
                          t,
                          n,
                          o,
                          r,
                          i,
                          a,
                          l,
                          s = I.sortableInfo.index,
                          c =
                            ((e = I),
                            {
                              bottom: W(
                                (t = window.getComputedStyle(e)).marginBottom,
                              ),
                              left: W(t.marginLeft),
                              right: W(t.marginRight),
                              top: W(t.marginTop),
                            }),
                          u =
                            ((n = R.container),
                            'grid' === (o = window.getComputedStyle(n)).display
                              ? {x: W(o.gridColumnGap), y: W(o.gridRowGap)}
                              : {x: 0, y: 0}),
                          f = R.scrollContainer.getBoundingClientRect(),
                          d = b({index: s, node: I, collection: C});
                        if (
                          ((R.node = I),
                          (R.margin = c),
                          (R.gridGap = u),
                          (R.width = d.width),
                          (R.height = d.height),
                          (R.marginOffset = {
                            x: R.margin.left + R.margin.right + R.gridGap.x,
                            y: Math.max(
                              R.margin.top,
                              R.margin.bottom,
                              R.gridGap.y,
                            ),
                          }),
                          (R.boundingClientRect = I.getBoundingClientRect()),
                          (R.containerBoundingRect = f),
                          (R.index = s),
                          (R.newIndex = s),
                          (R.axis = {
                            x: 0 <= x.indexOf('x'),
                            y: 0 <= x.indexOf('y'),
                          }),
                          (R.offsetEdge = _(I, R.container)),
                          (R.initialOffset = G(
                            T
                              ? ae(
                                  ae({}, E),
                                  {},
                                  {
                                    pageX: R.boundingClientRect.left,
                                    pageY: R.boundingClientRect.top,
                                  },
                                )
                              : E,
                          )),
                          (R.initialScroll = {
                            left: R.scrollContainer.scrollLeft,
                            top: R.scrollContainer.scrollTop,
                          }),
                          (R.initialWindowScroll = {
                            left: window.pageXOffset,
                            top: window.pageYOffset,
                          }),
                          (R.helper = R.helperContainer.appendChild(
                            ((i =
                              'input, textarea, select, canvas, [contenteditable]'),
                            (a = (r = I).querySelectorAll(i)),
                            (l = r.cloneNode(!0)),
                            D(l.querySelectorAll(i)).forEach(function(e, t) {
                              'file' !== e.type && (e.value = a[t].value),
                                'radio' === e.type &&
                                  e.name &&
                                  (e.name = '__sortableClone__'.concat(e.name)),
                                e.tagName === $.Canvas &&
                                  0 < a[t].width &&
                                  0 < a[t].height &&
                                  e.getContext('2d').drawImage(a[t], 0, 0);
                            }),
                            l),
                          )),
                          A(R.helper, {
                            boxSizing: 'border-box',
                            height: ''.concat(R.height, 'px'),
                            left: ''.concat(
                              R.boundingClientRect.left - c.left,
                              'px',
                            ),
                            pointerEvents: 'none',
                            position: 'fixed',
                            top: ''.concat(
                              R.boundingClientRect.top - c.top,
                              'px',
                            ),
                            width: ''.concat(R.width, 'px'),
                          }),
                          T && R.helper.focus(),
                          S &&
                            A((R.sortableGhost = I), {
                              opacity: 0,
                              visibility: 'hidden',
                            }),
                          (R.minTranslate = {}),
                          (R.maxTranslate = {}),
                          T)
                        ) {
                          var h = k
                              ? {
                                  top: 0,
                                  left: 0,
                                  width: R.contentWindow.innerWidth,
                                  height: R.contentWindow.innerHeight,
                                }
                              : R.containerBoundingRect,
                            p = h.top,
                            y = h.left,
                            g = h.width,
                            v = p + h.height,
                            m = y + g;
                          R.axis.x &&
                            ((R.minTranslate.x = y - R.boundingClientRect.left),
                            (R.maxTranslate.x =
                              m - (R.boundingClientRect.left + R.width))),
                            R.axis.y &&
                              ((R.minTranslate.y =
                                p - R.boundingClientRect.top),
                              (R.maxTranslate.y =
                                v - (R.boundingClientRect.top + R.height)));
                        } else
                          R.axis.x &&
                            ((R.minTranslate.x =
                              (k ? 0 : f.left) -
                              R.boundingClientRect.left -
                              R.width / 2),
                            (R.maxTranslate.x =
                              (k
                                ? R.contentWindow.innerWidth
                                : f.left + f.width) -
                              R.boundingClientRect.left -
                              R.width / 2)),
                            R.axis.y &&
                              ((R.minTranslate.y =
                                (k ? 0 : f.top) -
                                R.boundingClientRect.top -
                                R.height / 2),
                              (R.maxTranslate.y =
                                (k
                                  ? R.contentWindow.innerHeight
                                  : f.top + f.height) -
                                R.boundingClientRect.top -
                                R.height / 2));
                        w &&
                          w.split(' ').forEach(function(e) {
                            return R.helper.classList.add(e);
                          }),
                          (R.listenerNode = E.touches ? I : R.contentWindow),
                          T
                            ? (R.listenerNode.addEventListener(
                                'wheel',
                                R.handleKeyEnd,
                                !0,
                              ),
                              R.listenerNode.addEventListener(
                                'mousedown',
                                R.handleKeyEnd,
                                !0,
                              ),
                              R.listenerNode.addEventListener(
                                'keydown',
                                R.handleKeyDown,
                              ))
                            : (j.move.forEach(function(e) {
                                return R.listenerNode.addEventListener(
                                  e,
                                  R.handleSortMove,
                                  !1,
                                );
                              }),
                              j.end.forEach(function(e) {
                                return R.listenerNode.addEventListener(
                                  e,
                                  R.handleSortEnd,
                                  !1,
                                );
                              })),
                          R.setState({sorting: !0, sortingIndex: s}),
                          O &&
                            O(
                              {
                                node: I,
                                index: s,
                                collection: C,
                                isKeySorting: T,
                                nodes: R.manager.getOrderedRefs(),
                                helper: R.helper,
                              },
                              E,
                            ),
                          T && R.keyMove(0);
                      },
                      t = R.props,
                      x = t.axis,
                      b = t.getHelperDimensions,
                      w = t.helperClass,
                      S = t.hideSortableGhost,
                      n = t.updateBeforeSortStart,
                      O = t.onSortStart,
                      k = t.useWindowAsScrollContainer,
                      I = r.node,
                      C = r.collection,
                      T = R.manager.isKeySorting,
                      o = (function() {
                        if ('function' == typeof n) {
                          R._awaitingUpdateBeforeSortStart = !0;
                          var e = (function(e, t) {
                            try {
                              var n = e();
                            } catch (e) {
                              return t(!0, e);
                            }
                            return n && n.then
                              ? n.then(t.bind(null, !1), t.bind(null, !0))
                              : t(!1, n);
                          })(
                            function() {
                              var e = I.sortableInfo.index;
                              return Promise.resolve(
                                n(
                                  {
                                    collection: C,
                                    index: e,
                                    node: I,
                                    isKeySorting: T,
                                  },
                                  E,
                                ),
                              ).then(function() {});
                            },
                            function(e, t) {
                              if (((R._awaitingUpdateBeforeSortStart = !1), e))
                                throw t;
                              return t;
                            },
                          );
                          if (e && e.then) return e.then(function() {});
                        }
                      })();
                    return o && o.then ? o.then(e) : e();
                  }
                })();
                return Promise.resolve(
                  t && t.then ? t.then(function() {}) : void 0,
                );
              } catch (e) {
                return Promise.reject(e);
              }
            }),
            w(p(R), 'handleSortMove', function(e) {
              var t = R.props.onSortMove;
              'function' == typeof e.preventDefault && e.preventDefault(),
                R.updateHelperPosition(e),
                R.animateNodes(),
                R.autoscroll(),
                t && t(e);
            }),
            w(p(R), 'handleSortEnd', function(e) {
              var t = R.props,
                n = t.hideSortableGhost,
                o = t.onSortEnd,
                r = R.manager,
                i = r.active.collection,
                a = r.isKeySorting,
                l = R.manager.getOrderedRefs();
              R.listenerNode &&
                (a
                  ? (R.listenerNode.removeEventListener(
                      'wheel',
                      R.handleKeyEnd,
                      !0,
                    ),
                    R.listenerNode.removeEventListener(
                      'mousedown',
                      R.handleKeyEnd,
                      !0,
                    ),
                    R.listenerNode.removeEventListener(
                      'keydown',
                      R.handleKeyDown,
                    ))
                  : (j.move.forEach(function(e) {
                      return R.listenerNode.removeEventListener(
                        e,
                        R.handleSortMove,
                      );
                    }),
                    j.end.forEach(function(e) {
                      return R.listenerNode.removeEventListener(
                        e,
                        R.handleSortEnd,
                      );
                    }))),
                R.helper.parentNode.removeChild(R.helper),
                n &&
                  R.sortableGhost &&
                  A(R.sortableGhost, {opacity: '', visibility: ''});
              for (var s = 0, c = l.length; s < c; s++) {
                var u = l[s],
                  f = u.node;
                f.sortableInfo.wasLocked &&
                  ((f.sortableInfo.wasLocked = !1),
                  (f.sortableInfo.locked = !0)),
                  (u.edgeOffset = null),
                  N(f, (u.boundingClientRect = null)),
                  M(f, null),
                  (u.translate = null);
              }
              R.autoScroller.clear(),
                (R.manager.active = null),
                (R.manager.isKeySorting = !1),
                R.setState({sorting: !1, sortingIndex: null}),
                'function' == typeof o &&
                  o(
                    {
                      collection: i,
                      newIndex: R.newIndex,
                      oldIndex: R.index,
                      isKeySorting: a,
                      nodes: l,
                    },
                    e,
                  ),
                (R.touched = !1);
            }),
            w(p(R), 'autoscroll', function() {
              var e = R.props.disableAutoscroll,
                t = R.manager.isKeySorting;
              if (e) R.autoScroller.clear();
              else {
                if (t) {
                  var n = ae({}, R.translate),
                    o = 0,
                    r = 0;
                  return (
                    R.axis.x &&
                      ((n.x = Math.min(
                        R.maxTranslate.x,
                        Math.max(R.minTranslate.x, R.translate.x),
                      )),
                      (o = R.translate.x - n.x)),
                    R.axis.y &&
                      ((n.y = Math.min(
                        R.maxTranslate.y,
                        Math.max(R.minTranslate.y, R.translate.y),
                      )),
                      (r = R.translate.y - n.y)),
                    (R.translate = n),
                    N(R.helper, R.translate),
                    (R.scrollContainer.scrollLeft += o),
                    void (R.scrollContainer.scrollTop += r)
                  );
                }
                R.autoScroller.update({
                  height: R.height,
                  maxTranslate: R.maxTranslate,
                  minTranslate: R.minTranslate,
                  translate: R.translate,
                  width: R.width,
                });
              }
            }),
            w(p(R), 'onAutoScroll', function(e) {
              (R.translate.x += e.left),
                (R.translate.y += e.top),
                R.animateNodes();
            }),
            w(p(R), 'handleKeyDown', function(e) {
              var t = e.keyCode,
                n = R.props,
                o = n.shouldCancelStart,
                r = n.keyCodes,
                i = void 0 === r ? {} : r,
                a = ae(ae({}, ne), i);
              (R.manager.active && !R.manager.isKeySorting) ||
                !(
                  R.manager.active ||
                  (a.lift.includes(t) && !o(e) && R.isValidSortingTarget(e))
                ) ||
                (e.stopPropagation(),
                e.preventDefault(),
                a.lift.includes(t) && !R.manager.active
                  ? R.keyLift(e)
                  : a.drop.includes(t) && R.manager.active
                  ? R.keyDrop(e)
                  : a.cancel.includes(t)
                  ? ((R.newIndex = R.manager.active.index), R.keyDrop(e))
                  : a.up.includes(t)
                  ? R.keyMove(-1)
                  : a.down.includes(t) && R.keyMove(1));
            }),
            w(p(R), 'keyLift', function(e) {
              var t = e.target,
                n = L(t, function(e) {
                  return null != e.sortableInfo;
                }).sortableInfo,
                o = n.index,
                r = n.collection;
              (R.initialFocusedNode = t),
                (R.manager.isKeySorting = !0),
                (R.manager.active = {index: o, collection: r}),
                R.handlePress(e);
            }),
            w(p(R), 'keyMove', function(e) {
              var t = R.manager.getOrderedRefs(),
                n = t[t.length - 1].node.sortableInfo.index,
                o = R.newIndex + e,
                r = R.newIndex;
              if (!(o < 0 || n < o)) {
                (R.prevIndex = r), (R.newIndex = o);
                var i,
                  a,
                  l,
                  s =
                    ((i = R.newIndex),
                    (a = R.prevIndex),
                    (l = R.index),
                    i < l && a < i ? i - 1 : l < i && i < a ? i + 1 : i),
                  c = t.find(function(e) {
                    return e.node.sortableInfo.index === s;
                  }),
                  u = c.node,
                  f = R.containerScrollDelta,
                  d = c.boundingClientRect || K(u, f),
                  h = c.translate || {x: 0, y: 0},
                  p = d.top + h.y - f.top,
                  y = d.left + h.x - f.left,
                  g = r < o,
                  v = g && R.axis.x ? u.offsetWidth - R.width : 0,
                  m = g && R.axis.y ? u.offsetHeight - R.height : 0;
                R.handleSortMove({
                  pageX: y + v,
                  pageY: p + m,
                  ignoreTransition: 0 === e,
                });
              }
            }),
            w(p(R), 'keyDrop', function(e) {
              R.handleSortEnd(e),
                R.initialFocusedNode && R.initialFocusedNode.focus();
            }),
            w(p(R), 'handleKeyEnd', function(e) {
              R.manager.active && R.keyDrop(e);
            }),
            w(p(R), 'isValidSortingTarget', function(e) {
              var t = R.props.useDragHandle,
                n = e.target,
                o = L(n, function(e) {
                  return null != e.sortableInfo;
                });
              return (
                o &&
                o.sortableInfo &&
                !o.sortableInfo.disabled &&
                (t ? Z(n) : n.sortableInfo)
              );
            }),
            S(
              !((t = e).distance && t.pressDelay),
              'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.',
            ),
            (R.manager = new O()),
            (R.events = {
              end: R.handleEnd,
              move: R.handleMove,
              start: R.handleStart,
            }),
            R
          );
        }
        return (
          h(o, [
            {
              key: 'getChildContext',
              value: function() {
                return {manager: this.manager};
              },
            },
            {
              key: 'componentDidMount',
              value: function() {
                var n = this,
                  o = this.props.useWindowAsScrollContainer,
                  e = this.getContainer();
                Promise.resolve(e).then(function(e) {
                  (n.container = e),
                    (n.document = n.container.ownerDocument || document);
                  var t =
                    n.props.contentWindow || n.document.defaultView || window;
                  (n.contentWindow = 'function' == typeof t ? t() : t),
                    (n.scrollContainer = o
                      ? n.document.scrollingElement ||
                        n.document.documentElement
                      : U(n.container) || n.container),
                    (n.autoScroller = new ee(
                      n.scrollContainer,
                      n.onAutoScroll,
                    )),
                    Object.keys(n.events).forEach(function(t) {
                      return j[t].forEach(function(e) {
                        return n.container.addEventListener(e, n.events[t], !1);
                      });
                    }),
                    n.container.addEventListener('keydown', n.handleKeyDown);
                });
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                var n = this;
                this.helper &&
                  this.helper.parentNode &&
                  this.helper.parentNode.removeChild(this.helper),
                  this.container &&
                    (Object.keys(this.events).forEach(function(t) {
                      return j[t].forEach(function(e) {
                        return n.container.removeEventListener(e, n.events[t]);
                      });
                    }),
                    this.container.removeEventListener(
                      'keydown',
                      this.handleKeyDown,
                    ));
              },
            },
            {
              key: 'updateHelperPosition',
              value: function(e) {
                var t = this.props,
                  n = t.lockAxis,
                  o = t.lockOffset,
                  r = t.lockToContainerEdges,
                  i = t.transitionDuration,
                  a = t.keyboardSortingTransitionDuration,
                  l = void 0 === a ? i : a,
                  s = this.manager.isKeySorting,
                  c = e.ignoreTransition,
                  u = G(e),
                  f = {
                    x: u.x - this.initialOffset.x,
                    y: u.y - this.initialOffset.y,
                  };
                if (
                  ((f.y -= window.pageYOffset - this.initialWindowScroll.top),
                  (f.x -= window.pageXOffset - this.initialWindowScroll.left),
                  (this.translate = f),
                  r)
                ) {
                  var d = (function(e) {
                      var t = e.height,
                        n = e.width,
                        o = e.lockOffset,
                        r = Array.isArray(o) ? o : [o, o];
                      S(
                        2 === r.length,
                        'lockOffset prop of SortableContainer should be a single value or an array of exactly two values. Given %s',
                        o,
                      );
                      var i = b(r, 2),
                        a = i[0],
                        l = i[1];
                      return [
                        B({height: t, lockOffset: a, width: n}),
                        B({height: t, lockOffset: l, width: n}),
                      ];
                    })({height: this.height, lockOffset: o, width: this.width}),
                    h = b(d, 2),
                    p = h[0],
                    y = h[1],
                    g = this.width / 2 - p.x,
                    v = this.height / 2 - p.y,
                    m = this.width / 2 - y.x,
                    x = this.height / 2 - y.y;
                  (f.x = P(
                    this.minTranslate.x + g,
                    this.maxTranslate.x - m,
                    f.x,
                  )),
                    (f.y = P(
                      this.minTranslate.y + v,
                      this.maxTranslate.y - x,
                      f.y,
                    ));
                }
                'x' === n ? (f.y = 0) : 'y' === n && (f.x = 0),
                  s && l && !c && M(this.helper, l),
                  N(this.helper, f);
              },
            },
            {
              key: 'animateNodes',
              value: function() {
                var b = this,
                  e = this.props,
                  w = e.transitionDuration,
                  S = e.hideSortableGhost,
                  t = e.onSortOver,
                  O = this.containerScrollDelta,
                  k = this.windowScrollDelta,
                  I = this.manager.getOrderedRefs(),
                  C = this.offsetEdge.left + this.translate.x + O.left,
                  T = this.offsetEdge.top + this.translate.y + O.top,
                  E = this.manager.isKeySorting,
                  R = this.newIndex;
                this.newIndex = null;
                for (
                  var D = function(e) {
                      return !e.node.sortableInfo.locked;
                    },
                    n = function(n, e) {
                      var t = I[n].node,
                        o = t.sortableInfo.index;
                      if (!D(I[n])) return 'continue';
                      var r = t.offsetWidth,
                        i = t.offsetHeight,
                        a = b.height > i ? i / 2 : b.height / 2,
                        l = b.width > r ? r / 2 : b.width / 2,
                        s = E && o > b.index && o <= R,
                        c = E && o < b.index && R <= o,
                        u = {x: 0, y: 0},
                        f = I[n].edgeOffset;
                      f ||
                        ((f = _(t, b.container)),
                        (I[n].edgeOffset = f),
                        E && (I[n].boundingClientRect = K(t, O)));
                      var d = n < I.length - 1 && I[n + 1];
                      if (
                        (d &&
                          !d.edgeOffset &&
                          ((d.edgeOffset = _(d.node, b.container)),
                          E && (d.boundingClientRect = K(d.node, O))),
                        o === b.index)
                      )
                        return (
                          S &&
                            A((b.sortableGhost = t), {
                              opacity: 0,
                              visibility: 'hidden',
                            }),
                          'continue'
                        );
                      w && M(t, w);
                      var h = function(e) {
                        var t = (function(e, t) {
                          var n =
                              2 < arguments.length && void 0 !== arguments[2]
                                ? arguments[2]
                                : D,
                            o = e + 1,
                            r = function() {
                              return o < I.length;
                            },
                            i = function() {
                              return (o += 1);
                            };
                          for (
                            t === ce &&
                            ((o = e - 1),
                            (r = function() {
                              return 0 <= o;
                            }),
                            (i = function() {
                              return (o -= 1);
                            }));
                            r();

                          ) {
                            if (n(I[o])) return o;
                            i();
                          }
                        })(n, e);
                        return _(I[t].node, b.container);
                      };
                      if (b.axis.x) {
                        if (b.axis.y) {
                          if (
                            c ||
                            (o < b.index &&
                              ((C + k.left - l <= f.left &&
                                T + k.top <= f.top + a) ||
                                T + k.top + a <= f.top))
                          ) {
                            var p = h(se);
                            (u.x = p.left - f.left),
                              (u.y = p.top - f.top),
                              null === b.newIndex && (b.newIndex = o);
                          } else if (
                            s ||
                            (o > b.index &&
                              ((C + k.left + l >= f.left &&
                                T + k.top + a >= f.top) ||
                                T + k.top + a >= f.top + i))
                          ) {
                            var y = h(ce);
                            (u.x = y.left - f.left),
                              (u.y = y.top - f.top),
                              (b.newIndex = o);
                          }
                        } else if (
                          s ||
                          (o > b.index && C + k.left + l >= f.left)
                        ) {
                          var g = h(ce);
                          (u.x = g.left - f.left), (b.newIndex = o);
                        } else if (
                          c ||
                          (o < b.index && C + k.left <= f.left + l)
                        ) {
                          var v = h(se);
                          (u.x = v.left - f.left),
                            null == b.newIndex && (b.newIndex = o);
                        }
                      } else if (b.axis.y)
                        if (s || (o > b.index && T + k.top + a >= f.top)) {
                          var m = h(ce);
                          (u.y = m.top - f.top), (b.newIndex = o);
                        } else if (
                          c ||
                          (o < b.index && T + k.top <= f.top + a)
                        ) {
                          var x = h(se);
                          (u.y = x.top - f.top),
                            null == b.newIndex && (b.newIndex = o);
                        }
                      N(t, u), (I[n].translate = u);
                    },
                    o = 0,
                    r = I.length;
                  o < r;
                  o++
                )
                  n(o);
                null == this.newIndex && (this.newIndex = this.index),
                  E && (this.newIndex = R);
                var i = E ? this.prevIndex : R;
                t &&
                  this.newIndex !== i &&
                  t({
                    collection: this.manager.active.collection,
                    index: this.index,
                    newIndex: this.newIndex,
                    oldIndex: i,
                    isKeySorting: E,
                    nodes: I,
                    helper: this.helper,
                  });
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  S(
                    r.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'getContainer',
              value: function() {
                var e = this.props.getContainer;
                return 'function' != typeof e
                  ? l.findDOMNode(this)
                  : e(r.withRef ? this.getWrappedInstance() : void 0);
              },
            },
            {
              key: 'render',
              value: function() {
                var e = r.withRef ? 'wrappedInstance' : null;
                return i.createElement(t, s({ref: e}, E(this.props, re)));
              },
            },
            {
              key: 'helperContainer',
              get: function() {
                var e = this.props.helperContainer;
                return 'function' == typeof e
                  ? e()
                  : this.props.helperContainer || this.document.body;
              },
            },
            {
              key: 'containerScrollDelta',
              get: function() {
                return this.props.useWindowAsScrollContainer
                  ? {left: 0, top: 0}
                  : {
                      left:
                        this.scrollContainer.scrollLeft -
                        this.initialScroll.left,
                      top:
                        this.scrollContainer.scrollTop - this.initialScroll.top,
                    };
              },
            },
            {
              key: 'windowScrollDelta',
              get: function() {
                return {
                  left:
                    this.contentWindow.pageXOffset -
                    this.initialWindowScroll.left,
                  top:
                    this.contentWindow.pageYOffset -
                    this.initialWindowScroll.top,
                };
              },
            },
          ]),
          o
        );
      })(i.Component)),
      w(e, 'displayName', H('sortableList', t)),
      w(e, 'defaultProps', oe),
      w(e, 'propTypes', te),
      w(e, 'childContextTypes', {manager: a.object.isRequired}),
      n
    );
  }
  function fe(o) {
    var r = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(o);
      if (r) {
        var n = x(this).constructor;
        e = Reflect.construct(t, arguments, n);
      } else e = t.apply(this, arguments);
      return m(this, e);
    };
  }
  var de = {
      index: a.number.isRequired,
      collection: a.oneOfType([a.number, a.string]),
      disabled: a.bool,
      locked: a.bool,
      wasLocked: a.bool,
    },
    he = Object.keys(de);
  function pe(o) {
    var e,
      t,
      r =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1};
    return (
      (t = e = (function(e) {
        g(n, e);
        var t = fe(n);
        function n() {
          return f(this, n), t.apply(this, arguments);
        }
        return (
          h(n, [
            {
              key: 'componentDidMount',
              value: function() {
                this.register();
              },
            },
            {
              key: 'componentDidUpdate',
              value: function(e) {
                this.node &&
                  (e.index !== this.props.index &&
                    (this.node.sortableInfo.index = this.props.index),
                  e.disabled !== this.props.disabled &&
                    (this.node.sortableInfo.disabled = this.props.disabled),
                  e.locked !== this.props.locked &&
                    (this.node.sortableInfo.locked = this.props.locked),
                  e.wasLocked !== this.props.wasLocked &&
                    (this.node.sortableInfo.wasLocked = this.props.wasLocked)),
                  e.collection !== this.props.collection &&
                    (this.unregister(e.collection), this.register());
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                this.unregister();
              },
            },
            {
              key: 'register',
              value: function() {
                var e = this.props,
                  t = e.collection,
                  n = e.disabled,
                  o = e.locked,
                  r = e.index,
                  i = l.findDOMNode(this);
                (i.sortableInfo = {
                  collection: t,
                  disabled: n,
                  index: r,
                  locked: o,
                  manager: this.context.manager,
                }),
                  (this.node = i),
                  (this.ref = {node: i}),
                  this.context.manager.add(t, this.ref);
              },
            },
            {
              key: 'unregister',
              value: function() {
                var e =
                  0 < arguments.length && void 0 !== arguments[0]
                    ? arguments[0]
                    : this.props.collection;
                this.context.manager.remove(e, this.ref);
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  S(
                    r.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call',
                  ),
                  this.refs.wrappedInstance
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = r.withRef ? 'wrappedInstance' : null;
                return i.createElement(o, s({ref: e}, E(this.props, he)));
              },
            },
          ]),
          n
        );
      })(i.Component)),
      w(e, 'displayName', H('sortableElement', o)),
      w(e, 'contextTypes', {manager: a.object.isRequired}),
      w(e, 'propTypes', de),
      w(e, 'defaultProps', {collection: 0}),
      t
    );
  }
  (e.SortableContainer = ue),
    (e.SortableElement = pe),
    (e.SortableHandle = Q),
    (e.arrayMove = function(e, t, n) {
      return (
        (e = e.slice()).splice(n < 0 ? e.length + n : n, 0, e.splice(t, 1)[0]),
        e
      );
    }),
    (e.sortableContainer = ue),
    (e.sortableElement = pe),
    (e.sortableHandle = Q),
    Object.defineProperty(e, '__esModule', {value: !0});
});
